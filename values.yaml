# Configuración extra para evitar repetición de valores, utilizada tanto para despliegue de keycloak (si se selecciona mediante configuración de este Chart,
# como en la configuración suministrada a la template de creación de configuración para el plugin de seguridad de Opensearch mediante la creación del secreto
# en opensearch-security-config.yaml).
extras:
  host: &host "my-domain.local"
  hostProtocol: "http"
  keycloakConnectUrl: "http://keycloak/keycloak-auth/realms/new/.well-known/openid-configuration"
  keycloakClientId: "opensearch"
  keycloakClientSecret: "12345678901234567890123456789012"

# Configuración global
global:
  # Registro de imágenes para todas las imágenes
  imageRegistry: ""
  # Clase de almacenamiento para todos los volúmenes persistentes
  storageClass: ""
# ------------------------------------------------------------------------
# Configuración de ingresos (utilizar en distribuciones de Kubernetes donde no se tenga instalado un controlador de ingresos previamente).
# ------------------------------------------------------------------------
ingress-controller:
  enabled: false
  fullnameOverride: "nginx-ingress-controller"
  # Tipo de servicio
  service:
    type: LoadBalancer

  # Recursos hardware
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
# ------------------------------------------------------------------------
# Configuración para Keycloak (opcional, solo presente a efectos de prueba/validación).
# ------------------------------------------------------------------------
keycloak:
  enabled: true
  fullnameOverride: "keycloak"
  # Autenticación (usuario y password administrador)
  auth:
    adminUser: admin
    adminPassword: "admin123"

  httpRelativePath: "/keycloak-auth/"

  image:
    registry: docker.io
    repository: bitnami/keycloak
    tag: 26.3.0-debian-12-r0

  # BBDD (PostgreSQL)
  postgresql:
    enabled: true
    auth:
      postgresPassword: "postgres123"
      username: "keycloak"
      password: "keycloak123"
      database: "keycloak"
    persistence:
      enabled: true
      size: 8Gi

  # Configuración del servicio de red.
  service:
    type: ClusterIP
    ports:
      http: 80
      https: 443

  # Configuración del ingreso de red al cluster.
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hostname: *host
    hostnameStrict: false
    path: "/keycloak-auth"
    pathType: "Prefix"
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    tls: false

  livenessProbe:
    enabled: true
  readinessProbe:
    enabled: true
  startupProbe:
    enabled: false

  adminIngress:
    enabled: false

  # Recursos hardware
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

  # Gestión de métricas
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false
# ------------------------------------------------------------------------
# Configuración para Opensearch (back-end y dashboard mediante configuración separada)
# ------------------------------------------------------------------------
# Configuración común a todos los nodos del cluster (back-end)
opensearch:
  enabled: true
  fullnameOverride: "opensearch"
  clusterDomain: "cluster.local"
  persistence:
    enabled: false
  tls:
    enabled: true
    autoGenerated: true
  # ejemplos de configuración
  # /opt/bitnami/opensearch/config/opensearch.yml
  # /opt/bitnami/opensearch/config/opensearch-security/config.yml
  # https://github.com/cht42/opensearch-keycloak/blob/main/opensearch.yml
  # MUY importante - ver referencia al template "opensearch-security-config.yml" que es donde se suministra toda la configuración
  # del plugin de seguridad, que gestiona todo el funcionamiento de la integración OIDC contra Keycloak.
  extraVolumes:
    - name: security-config
      configMap:
        name: opensearch-security-config
  extraVolumeMounts:
    - name: security-config
      mountPath: /opt/bitnami/opensearch/config/opensearch-security/config.yml
      subPath: config.yml
  # Despliegue de Opensearch dashboards
  dashboards:
    enabled: true
    password: "adminuser1234"
    # Montaje de configuración mediante volúmenes adicionales
    extraVolumes:
      - name: dashboard-config
        configMap:
          name: opensearch-security-config
    extraVolumeMounts:
      - name: dashboard-config
        mountPath: /opt/bitnami/opensearch-dashboards/config/opensearch_dashboards.yml
        subPath: opensearch_dashboards.yml
    # Enlace de opensearch-dashboards con el back-end opensearch
    extraEnvVars:
      - name: OPENSEARCH_URL
        value: "https://opensearch:9200"
    # Número de réplicas para el dashboard.
    replicaCount: 1
    # Ingreso de red al cluster para el dashboard
    ingress:
      enabled: true
      ingressClassName: "nginx"
      hostname: *host
      path: /
      pathType: Prefix
      annotations:
        nginx.ingress.kubernetes.io/ssl-redirect: "false"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      tls: false

  # Configuración del cluster para el back-end de Opensearch
  clusterName: "opensearch-cluster"

  # 1 Réplica para el nodo de ingesta
  ingest:
    enabled: true
    replicaCount: 1

  # 1 réplica para el nodo maestro
  master:
    replicaCount: 1
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi
    persistence:
      enabled: true
      size: 8Gi

  # 1 Réplica para el nodo de datos.
  data:
    replicaCount: 1
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
    persistence:
      enabled: true
      size: 20Gi

  # 1 Reṕlica para el nodo coordinador
  coordinating:
    replicaCount: 1
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi

  # Configuración de seguridad.
  security:
    enabled: true
    adminPassword: "opensearch123"
    logstashPassword: "logstash123"
    tls:
      autoGenerated: true
      restEncryption: true
  # Service configuration
  service:
    type: ClusterIP
    ports:
      restAPI: 9200
      performance: 9300
